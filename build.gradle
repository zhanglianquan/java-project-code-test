buildscript {
    repositories {
        // 优先使用国内源
        maven { url 'https://maven.aliyun.com/repository/public' }
        mavenCentral()
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url "http://repo.maven.apache.org/maven2" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}


// 所有模块/项目的通用配置
allprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
}

// 所有子模块/项目的统一配置
subprojects {
    apply plugin: 'java'
    // 指定JDK版本
    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    // 指定编码格式
    [compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'
    repositories {
        mavenCentral()
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url "http://repo.maven.apache.org/maven2" }
    }

    dependencies {
        
        compile("org.springframework.boot:spring-boot-starter-web:$springBootVersion")

        // Mybatis
        compile("org.mybatis:mybatis:$mybatisStarterVersion")
        // MyBatis 生成器
        compile("org.mybatis.generator:mybatis-generator-core:$mybatisGeneratorStarterVersion")
        // Log4j2
        compile("org.springframework.boot:spring-boot-starter-log4j2:$springBootVersion")

        // Mysql数据库驱动 JDBC Driver
        compile("mysql:mysql-connector-java:$mysqlConnectorVersion")

        // JSON
        compile("com.alibaba:fastjson:$fastjsonVersion")


        // 单元测试
        testCompile("org.springframework.boot:spring-boot-starter-test:${springBootVersion}")

        // Swagger-UI API文档生产工具
        compile("io.springfox:springfox-swagger2:$springfoxSwagger2Version")
        compile("io.springfox:springfox-swagger-ui:$springfoxSwaggerUIVersion")

        // lombok依赖
        compile("org.projectlombok:lombok:$lombokVersion")

        // 集成mongodb
        compile("org.springframework.boot:spring-boot-starter-data-mongodb:$mongoDBVersion")
        // aop
        compile("org.springframework.boot:spring-boot-starter-aop:$springBootVersion")
        // gson
        compile("com.google.code.gson:gson:2.6")

    }
    configurations {
        //移除spring boot 默认logger依赖
//        all*.exclude module: 'spring-boot-starter-logging'
    }
}